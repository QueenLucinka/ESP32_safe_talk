
## Connecting ESP32 to Node-RED and Writing Data to a File

### Step 1: Start Node-RED

1. Open PowerShell (or Command Prompt) on your Windows machine.

2. Run Node-RED by executing the following command:
   node-red

3. Open your web browser and navigate to:
   https://<your_IP_address>:1880
   Replace `<your_IP_address>` with the actual IP address of your PC (e.g., `192.168.10.122`).

### Step 2: Configure Node-RED Flow

1. Add an HTTP Input Node:
   - Drag the **HTTP In** node from the palette to your flow.
   - Double-click to configure it:
     - Set the **Method** to **POST**.
     - Set the **URL** (e.g., `/data`).

2. Add an HTTP Response Node:
   - Drag the **HTTP Response** node to your flow and connect it to the **HTTP In** node.
   - This node will send a response back to the client after processing.

3. Add a Function Node:
   - Drag the **Function** node onto the canvas.
   - Connect it between the **HTTP In** node and the **HTTP Response** node.
   - Double-click to configure the function with the following JavaScript code:

    
     // Assuming msg.payload.value contains the temperature value
     let temperature = msg.payload.value;  // Extract the temperature value
     let timestamp = new Date().toLocaleTimeString();  // Get the current time in HH:MM:SS format

     // Create a string like "HH:MM:SS,value"
     msg.payload = `${timestamp},${temperature}\n`;  // Add a newline character

     return msg;
   

4. Add a Write File Node:
   - Drag the **Write File** node from the palette.
   - Connect this node to the output of the **Function** node.
   - Double-click to configure it:
     - Set the **Filename** to the path of your existing text file where you want to store the data (e.g., `C:/path/to/your/sensor_data.txt`).

### Step 3: Deploy Your Flow

- Click the **Deploy** button in the top right corner of the Node-RED editor to save your flow and make it active.

### Final Notes

- Ensure that the path specified in the Write File node is valid and accessible by Node-RED.
- Make sure your ESP32 device is sending data to the correct URL configured in the HTTP In node.
- You can view the data written to your text file to verify that it is working correctly.
